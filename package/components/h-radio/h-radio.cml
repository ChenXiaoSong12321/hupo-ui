<template>
<view class="h-radio">
  <view class="h-radio-wrap" c-bind:tap="changeSelect">
    <view class="h-radio-select" style="{{ radioStyle }}">
      <view class="{{ radioClass }}" style="{{ radioInnerStyle }}">
      </view>
    </view>
    <text class="h-radio-label" >{{ label }}</text>
  </view>
</view>
</template>
<script>
import { primaryColor } from "../../assets/config/style.var.js";
class Radio  {
  props = {
    checked: {
      type: Boolean,
      default: false
    },
    label: {
      type: String
    },
    disabled: {
      type: Boolean,
      default: false
    },
    position: {
      type: String,
      default: 'left'
    },
    groupIndex: {
      type: Number,
      default: -1
    },
    color: {
      type: String,
      default: primaryColor
    }
  }
  data = {
    innerChecked: false
  }

  computed = {
    radioStyle () {
      let style = '';
      if (this.disabled) {
        style += 'opacity:0.5;'
      }
      if (this.position == 'right') {
        style += 'position:absolute;right:0;margin-right:45cpx;'
      } else {
        style += 'margin-right:13cpx;'
      }
      return style;
    },
    radioInnerStyle () {
      let style = ''
      if (this.innerChecked) {
        style += `border:10cpx solid ${this.color};`
      }
      
      return style;
    },
    radioClass () {
      if (this.disabled) {
        return  this.innerChecked? 'h-radio-selected-disabled': 'h-radio-unselect-disabled';
      }
      return this.innerChecked? 'h-radio-selected': 'h-radio-unselect';
    }
  }

  watch  = {
    checked (val) {
      this.innerChecked = val;
    }
  }

  methods = {
    changeSelect () {
      if (this.disabled) return;
      this.innerChecked = !this.innerChecked
      let value = {
        value: this.innerChecked
      }
      if (this.groupIndex !== -1) {
        value.index = this.groupIndex
      }
      this.$cmlEmit('change', value);
    }
  }
  mounted() {
    this.innerChecked = this.checked;
  }
}

export default new Radio();
</script>

<style lang="scss">
@import './h-radio.scss';
</style>

<script cml-type="json">
{
  "base": {
    "component": true
  }
}
</script>
