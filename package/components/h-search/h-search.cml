<template>
  <view class="h-search">
    <view class="h-search-wrap">
      <h-button type="none" c-bind:onclick="onclick">
        <view class="h-search-detail {{cancel?'is-cancel':''}}">
          <h-icon name="el-icon-hp-search" class="h-search-icon"></h-icon>
          <input
            class="h-field-input"
            placeholder="{{placeholder}}"
            value="{{value}}"
            cStyle="{{inputStyle}}"
            c-bind:input="inputChanged"
            type="{{type}}"
            disabled="{{disabled}}"
            focus="{{focus}}"
            maxlength="{{maxlength}}"
            returnKeyType="{{returnKeyType}}"
            placerHolderColor="{{placerHolderColor}}"
            maxValue="{{maxValue}}"
            minValue="{{minValue}}"
          />
        </view>
      </h-button>
      <h-button
        type="none"
        c-bind:onclick="oncancel"
        c-if="{{cancel}}"
        class="h-search-cancel-wrap"
      >
        <view class="h-search-cancel">取消</view>
      </h-button>
    </view>
  </view>
</template>

<script>
import HInputMixins from '../h-field/h-input.mixins.js'
import componentMixin from '../../core/mixins/component/index.js'

class HSearch {
  name = 'h-search'
  mixins = [HInputMixins, ...componentMixin]
  props = {
    value:{
      type:String,
      default:''
    },
    width:{
      type:String,
      default:''
    },
    cancel:{
      type:Boolean,
      default:false
    },
    placeholder:{
      type:String,
      default:'请输入搜索关键字'
    }
  }
  computed = {
   inputStyle(){
     return `
      border: none;
      height: 56cpx;
      line-height: 56cpx;
      font-size:26cpx;
      color:#666;
      padding:0;
      width:${this.inputWidth};
      border-radius: 0 56cpx 56cpx 0;
     `
   },
   inputWidth(){
     return this.width?this.width:(this.cancel?'526cpx':'446cpx')
   }
  }
  watch = {
    value(n,o){
      if(n!==o)this.$cmlEmit('onChanged',{value:n})
    }
  }
  methods = {
    onclick(){
      this.$cmlEmit('onclick',{value:this.value})
    },
    oncancel(){
      this.$cmlEmit('oncancel',{value:this.value})
    },
    inputChanged(e){
      this.$cmlEmit('input',e.detail)
    }
  }
}
export default new HSearch()
</script>
<style lang="scss">
@import "./h-search.scss";
</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "h-icon": "../h-icon/h-icon",
      "h-icon": "../h-icon/h-icon",
      "h-button": "../h-button/h-button"
    }
  }
}
</script>
