<template>
<view class="h-tabs">
  <view class="h-tabs-wrap">
    <tab-item 
      class="h-tabs-item"
      c-for="{{tabs}}" 
      tab="{{item}}"
      c-bind:tabclick="handleTabTap" 
      activeLabel="{{activeLabel}}"
      hasUnderline="{{hasUnderline}}"
      activeLabelStyle="{{activeLabelStyle}}"
    ></tab-item>
  </view>
  <view class="h-tabs-bottom"></view>
  <!-- <view c-if="{{hasUnderline}}" class="h-tabs-line-wrap" style="{{tabLineStyle}}"></view> -->
</view>
</template>
<script>
import { primaryColor } from "../../assets/config/style.var.js";
class HTabs {

  props = {
    tabs:{
      type:Array,
      default(){
        return [];
      },
    },
    activeLabel:{
      type:String,
    },
    hasUnderline:{
      type:Boolean,
      default:true,
    },
    activeLabelStyle:{
      type:String,
      default:`color:${primaryColor};border-bottom:4cpx solid ${primaryColor}`
    }
  }
  methods = {
    handleTabTap(e){
      let label = e.detail.label;
      let activeIndex = this.tabs.findIndex(item => item.label === label);

      this.$cmlEmit('tabclick',{label,activeIndex})
    }
  }
  
}
export default new HTabs();
</script>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "tab-item": "../tab-item/tab-item"
    },
    "component": true
  }
}
</script>
<style lang="less">
@import '../../assets/less/_output.less';
.h-tabs{
  position:relative;
  &-item{
    flex:1;
    text-align:center;
  }
  &-wrap{
    display:flex;
    flex-direction:row;
    justify-content:space-around;
    // border-bottom: 1cpx solid @--border-color-d1;
  }
  &-bottom{
    width: 100%;
    height: 1cpx;
    background-color: @--border-color-d1;
  }
}
</style>

