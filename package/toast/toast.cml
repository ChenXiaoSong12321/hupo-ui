<template>
  <popup-manager show="{{show}}" mask="{{mask}}">
    <view class="h-toast-content">
      <image c-if="{{needIcon}}" src="{{typeImg}}" class="h-toast-icon">
      <text class="h-toast-text">{{message}}</text>
    </view>
  </popup-manager>
</template>
<script>
class HToast {
  props = {
    type: {
      type: String,
      default: "loading"
    },
    message: {
      type: String,
      default: ""
    },
    duration: {
      type: Number,
      default: 3000
    },
    show: {
      type: Boolean,
      default: false
    },
    mask: {
      type: Boolean,
      default: false
    },
    needIcon: {
      type: Boolean,
      default: true
    }
  };
  data = {
    transitionStyle: "",
    IconMap: {
      loading: require("./images/loading.gif"),
      success: require("./images/succ.png"),
      warn: require("./images/warn.png")
    }
  };

  computed = {
    typeImg() {
      return this.IconMap[this.type];
    },
    maskClass() {
      return this.mask ? "has-mask" : "no-mask";
    }
  };

  watch = {
    show(n, o) {
      if (n) {
        setTimeout(() => {
          this.$cmlEmit("show", { value: false });
        }, this.duration);
      }
    }
  };
}

export default new HToast();
</script>
<style lang="less">
.h-toast {
  &-content {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 26cpx 32cpx;
    color: #ccc;
    background-color: rgba(37, 38, 45, 1);
    border-radius: 4cpx;
  }
  &-icon {
    width: 48cpx;
    height: 48cpx;
    margin-right: 16cpx;
  }
  &-text {
    font-size: 32cpx;
    color: #fff;
    flex: 1;
    line-height: 40cpx;
    font-size: 28cpx;
    max-width: 600cpx;
    max-height: 80cpx;
    overflow: hidden;
  }
}
</style>
<script cml-type="json">
{
    "base": {
        "usingComponents": {
          "popup-manager": "../popup-manager/popup-manager"
        },
        "component": true
    }
}
</script>
