<script cml-type="interface">
interface DifferenceInterface {}
</script>

<script cml-type="web">
import getNetworkType from '../utils/getNetworkType'
  let app = {}
  class Difference implements DifferenceInterface {
    setApp(_app){
      app = _app
    }
    getApp() {
      return app
    }
    getUrl(){
      return window.location.href
    }
    getCurrentPages() {
      const app = this.getApp()
      return (app.router && app.router.historys) ? JSON.parse(JSON.stringify(app.router.historys)) : []
    }
    getCurrentPage() {
      const app = this.getApp()
      return (app.router && app.router.current) ? app.router.current : {}
    }
    selectComponent(ctx,compName){
      return ctx?ctx.$refs[compName]:{}
    }
    selector(ctx,selector){
      if(!ctx || !ctx.$children || ctx.$children.length == 0){
        return []
      }
      const selectors = selector.split('.')
      selectors.shift()
      const results = []
      ctx.$children.forEach(child => {
        // console.log(child.$el.className.split(' ').find(c => c === selector))
        const classNames = child.$el.className.split(' ')
        if(classNames.find(c => selectors.indexOf(c) > -1)){
          results.push(child)
        }
      })
      return results
    }
    async nextTick(){
      Vue && await Vue.nextTick()
    }
    getNetworkType(){
      return getNetworkType()
    }
    getDataset(event){
      const currentTarget = event.currentTarget || event.detail.currentTarget
      return currentTarget.dataset
    }
  }
  export default new Difference();
</script>
<script cml-type="wx">
  import wxTools from '../utils/wxTools.js'
  import promise from '../utils/promise.js'
  class Difference implements DifferenceInterface {
    setApp(){
    }
    getApp() {
      return getApp()
    }
    getUrl(){
      const page = this.getCurrentPage()
      return ''
    }
    getCurrentPages(){
      return getCurrentPages()
    }
    getCurrentPage() {
      const pages = getCurrentPages()
      return pages[pages.length - 1]
    }
    selectComponent(ctx,compName){
      return ctx?ctx.selectComponent('#'+compName):{}
    }
    selector(ctx,selector){
      return ctx?ctx.selectAllComponents(selector):[]
    }
    async nextTick(delay = 500){
      if(wxTools.$nextTick){
        await wxTools.$nextTick()
      }else{
        await promise.delay(delay)
      }
    }
    getNetworkType(){
      return wxTools.getNetworkType()
    }
    getDataset(event){
      return event.currentTarget.dataset
    }
  }
  export default new Difference();
</script>
