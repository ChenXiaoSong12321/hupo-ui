<template>
  <view class="h-image-mode">
    <block c-if="{{mode === 'widthFix'}}">
      <img class="h-image-mode-origin" src="{{src}}"></img>
    </block>
    <block c-else>
      <view class="h-image-mode-background" style="background-image: url({{src}});{{modeStyle}}"></view>
    </block>
  </view>
</template>

<script>
import loadImage from './assets/js/image.load.js'
import componentMixin from '../../core/mixins/component/index.js'

class HImageOrigin implements HImageOriginInterface {
  name = 'h-image-origin'
  props = {
    src: {
      type: String,
      default: ''
    },
    mode: {
      type: String,
      default: 'scaleToFill'
    }
  }
  watch = {
    src() {
      this.loadImage()
    }
  }
  computed = {
    modeStyle() {
      let size = 'auto'
      let position = ''
      const repeat = 'no-repeat'
      switch (this.mode) {
        case 'aspectFit':
          size = 'contain'
          position = 'center center'
          break
        case 'aspectFill':
          size = 'cover'
          position = 'center center'
          break
        case 'widthFix':
          size = '100% 100%'
          break
        case 'top':
          position = 'center top'
          break
        case 'bottom':
          position = 'center bottom'
          break
        case 'center':
          position = 'center center'
          break
        case 'left':
          position = 'left center'
          break
        case 'right':
          position = 'right center'
          break
        case 'top left':
          position = 'left top'
          break
        case 'top right':
          position = 'right top'
          break
        case 'bottom left':
          position = 'left bottom'
          break
        case 'bottom right':
          position = 'right bottom'
          break
        default:
          size = '100% 100%'
          position = '0% 0%'
          break
      }
      return `background-position:${position};background-size:${size};background-repeat:${repeat};`
    }
  }
  mounted() {
    this.loadImage()
  }
  methods = {
    async loadImage() {
      try {
        await loadImage(this.src)
        this.$cmlEmit('onload')
      } catch (error) {
        this.$cmlEmit('onerror')
      }
    }
  }
}

export default new HImageOrigin()
</script>

<style lang="scss">
@import '../../assets/scss/output';
@include b(image-mode){
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  @include e(origin){
    width: 100%;
    vertical-align: top;
  }
  @include e(background){
    width: 100%;
    height: 100%;
  }
}
</style>

<script cml-type="json">
{
  "base": {
    "component": true
  }
}
</script>
