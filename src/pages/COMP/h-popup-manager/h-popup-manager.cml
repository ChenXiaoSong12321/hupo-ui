<template>
  <h-page ref="h-page" title="h-popup-manager 演示">
    <view class="container">
      <h-popup-manager show="{{show}}" mask="{{mask}}" c-bind:onclose="closePopup">
        <view style="background:#fff">hhhhhhh</view>
      </h-popup-manager>
      <h-popup-manager
        show="{{show2}}"
        mask="{{mask}}"
        c-bind:onclose="closePopup"
        position="{{position}}"
      >
        <view style="{{contentStyle}}">
          <text style="font-size: 28cpx;">content</text>
        </view>
      </h-popup-manager>
      <h-button c-bind:onclick="showPopup" class="btn">show popup</h-button>
      <h-button c-bind:onclick="showPopup2('left')" class="btn">left</h-button>
      <h-button c-bind:onclick="showPopup2('top')" class="btn">top</h-button>
      <h-button c-bind:onclick="showPopup2('right')" class="btn">right</h-button>
      <h-button c-bind:onclick="showPopup2('bottom')" class="btn">bottom</h-button>
      <h-button c-bind:onclick="showPopup2('center')" class="btn">center</h-button>
      
    </view>
  </h-page>
</template>
<script>
import page from "../../../core/mixins/page";
class PopupManager {
  data = {
    mask: true,
    show: false,
    show2: false,
    position: "",
    pos: ["left", "top", "right", "bottom", ""],
    posi: 0
  };
  computed = {
    contentStyle() {
      let style;
      switch (this.position) {
        case "left":
          style = "width:200cpx;background:#fff;";
          break;
        case "top":
          style = "height:200cpx;background:#fff;";
          break;
        case "right":
          style = "width:200cpx;background:#fff;";
          break;
        case "bottom":
          style = "height:200cpx;background:#fff;";
          break;
        default:
          style =
            "display:block;width: 500cpx;height: 200cpx;background: #fff;";
          break;
      }
      return style;
    }
  };
  methods = {
    showPopup() {
      this.show = true;
    },
    
    showPopup2(e) {
      this.position = e;
      console.log(e);
      this.show2 = true;
    },
    closePopup() {
      this.show = false;
      this.show2 = false;
    }
  };
}
export default page(PopupManager);
</script>
<style scoped lang="scss">
.container {
  display: flex;
  flex-direction: column;
  flex: 1;
  align-items: center;
  .btn {
    margin-top: 20cpx;
  }
}
</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "h-page": "/components/h-page/h-page",
      "h-popup-manager": "/components/h-popup-manager/h-popup-manager",
      "h-button": "/components/h-button/h-button"
    },
    "navigationBarTitleText": "h-button",
    "backgroundTextStyle": "dark",
    "backgroundColor": "#E2E2E2"
  }
}
</script>
