<template>
  <h-page title="h-tabbar 演示">
    <h-scroll>
      <bar-index c-show="{{currentTabbarIndex === 0}}" c-if="{{tabbar[0].loaded}}"></bar-index>
      <bar-trip c-show="{{currentTabbarIndex === 1}}" c-if="{{tabbar[1].loaded}}"></bar-trip>
      <bar-my c-show="{{currentTabbarIndex === 2}}" c-if="{{tabbar[2].loaded}}"></bar-my>
    </h-scroll>
    <h-tabbar c-bind:tabbarclick="handleTabbarClick" tabbar="{{tabbar}}"></h-tabbar>
  </h-page>
</template>

<script>
import cml from 'chameleon-api'
import pageMixin from '../../../core/mixins/page/index.js'
import { global } from '@hupo/core'

const preIndex = 0
export default {
  mixins: pageMixin,
  data: {
    currentTabbarIndex: 0,
    tabbar: [
      {
        text: '首页',
        loaded: true,
        icon: require('../../../assets/images/index.png'),
        selectedIcon: require('../../../assets/images/index-active.png')
      },
      {
        text: '行程',
        loaded: false,
        icon: require('../../../assets/images/trip.png'),
        selectedIcon: require('../../../assets/images/trip-active.png')
      },
      {
        text: '我的',
        loaded: false,
        icon: require('../../../assets/images/my.png'),
        selectedIcon: require('../../../assets/images/my-active.png')
      }
    ]
  },
  watch: {
    currentTabbarIndex(n) {
      global.currentTabbarIndex = n
      console.log(n)
    }
  },
  methods: {
    handleTabbarClick(e) {
      const { index } = e.detail
      this.currentTabbarIndex = index
      this.tabbar[index].loaded = true
    }
  },
  mounted() {
    this.currentTabbarIndex = global.currentTabbarIndex || 0
    this._broadcast('h-scroll', 'offetHeight', 100)
  }
}
</script>
<script cml-type="json">
{
  "base":{
    "usingComponents": {
      "h-page": "/components/h-page/h-page",
      "h-tabbar": "/components/h-tabbar/h-tabbar",
      "h-scroll": "/components/h-scroll/h-scroll",
      "bar-my":"./bar-my",
      "bar-trip":"./bar-trip",
      "bar-index":"./bar-index"
    },
    "navigationBarTitleText": "tabbar",
     "backgroundTextStyle": "dark",
     "backgroundColor": "#E2E2E2"
  }
}
</script>
<style scoped>
.container {
  flex: 1;
  background: #f8f8f8;
}
.title {
  display: flex;
  flex-direction: row;
  justify-content: center;
  line-height: 88cpx;
  font-size: 28cpx;
  text-align: center;
  height: 88cpx;
  color: #999;
}
.one {
  color: #fff;
  height: 500cpx;
  background-color: rgb(46, 240, 127);
}
.two {
  color: #fff;
  height: 500cpx;
  background-color: rgb(0, 162, 255);
}
.three {
  color: #fff;
  height: 500cpx;
  background-color: #00ffe4;
}
</style>
