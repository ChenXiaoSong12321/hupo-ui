<template>
<h-page ref="h-page" title="hupo-ui组件展示" background="BgC2">
  <view class="index-page">
    <view class="index-body" style="{{bodyComputedStyl}}">
      <view ref="index-content-wrap" class="index-content-wrap" style="{{computedStyle}}">
        <view class="index-item-content">
          <view class="index-hd">
            <image class="index-logo" src="{{comLogoSrc}}"></image>
            <view class="index-desc">
              <text class="index-desc-text">以下将展示 hupo-ui 自定义组件能力，组件样式仅供参考，开发者可根据自身需求自定义组件样式，具体属性参数详见 hupo-ui 源码。</text>
            </view>
          </view>
          <view class="index-bd">
            <view class="kind-list">

              <view c-for="{{comList}}" c-for-item="item" c-for-index="i">
                <view class="{{item.open ? 'kind-list-item-show' : 'kind-list-item'}}">
                  <view id="{{item.cid}}" class="{{item.open ? 'kind-list-item-hd-show' : 'kind-list-item-hd'}}" c-bind:tap="kindToggle">
                    <view class="kind-list-text">
                      <text>{{item.name}}</text>
                    </view>
                    <image class="kind-list-img" src="{{item.src}}"></image>
                  </view>
                  <view class="{{item.open ? 'kind-list-item-bd-show' : 'kind-list-item-bd'}}">
                    <view class="{{item.open ? 'navigator-box-show' : 'navigator-box'}}">
                      <view c-for="{{item.pages}}" c-for-item="page" c-for-index="j">
                        <view data-routepath="{{page.path}}" data-routeurl="{{page.url}}" class="navigator" c-bind:tap="routeTo">
                          <view class="navigator-text">
                            <text>{{page.name}}</text>
                          </view>
                          <image class="navigator-arrow" src="{{arrowIcon}}"></image>
                        </view>
                      </view>
                    </view>
                  </view>
                </view>
              </view>

            </view>
          </view>
        </view>
        <view class="index-item-content">
          <view class="index-hd">
            <image class="index-logo" src="{{apiLogoSrc}}"></image>
            <view class="index-desc">
              <text>以下将演示chameleon接口能力，具体属性参数详见chameleon开发文档。</text>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
</h-page>
</template>
<script>
import cml from "chameleon-api"
import routerConfig from '../../router.config.json'
import page from '../../core/mixins/page'

let routes = routerConfig.routes;

let routeObj = {}
routes.forEach(route => {
  routeObj[route['name']] = route
})

class Demo {
  data = {
    comList: [
      {
        cid: "content1",
        name: "基础内容-弹出层",
        open: false,
        pages: [
          routeObj["h-toast"],
          routeObj["h-popup-manager"],
          routeObj["h-popup"],
          routeObj["h-dialog"],
          routeObj["h-loading"]
        ],
        src: require(`../../assets/images/component/kind/content.png`)
      },
      {
        cid: "content2",
        name: "基础内容-展示",
        open: false,
        pages: [
          routeObj["h-icon"],
          routeObj["h-image"],
          routeObj["h-search"],
          routeObj["h-rich-text"],
          routeObj["h-load-more"],
          routeObj["h-tag"],
          routeObj["h-progress"],
          routeObj["h-filter"],
          routeObj["h-carousel"]
        ],
        src: require(`../../assets/images/component/kind/content.png`)
      },
      {
        cid: "form",
        name: "表单组件",
        open: false,
        pages: [
          routeObj["h-radio"],
          routeObj["h-checkbox"],
          routeObj["h-input"],
          routeObj["h-field"],
          routeObj["h-button"],
          routeObj["h-stepper"],
        ],
        src: require(`../../assets/images/component/kind/form.png`)
      },
      {
        cid: "nav",
        name: "导航",
        open: false,
        pages: [
          routeObj["h-navbar"],
          routeObj["h-tab"],
          routeObj["h-tabbar"],
        ],
        src: require(`../../assets/images/component/kind/nav.png`)
      }
    ],
    apiList: [
      {
        cid: "page",
        name: "界面",
        open: false,
        pages: [
        ],
        src: require(`../../assets/images/api/kind/page.png`)
      },
    ],
    comLogoSrc: require(`../../assets/images/component/kind/logo.png`),
    apiLogoSrc: require(`../../assets/images/api/kind/logo.png`),
    tabList: [],
    activeTab: "component",
    arrowIcon: "https://gw.alicdn.com/tfs/TB11zBUpwMPMeJjy1XbXXcwxVXa-22-22.png"
  }

  computed = {
    computedStyle() {
      let transVal = this.activeTab === "api" ? "-750" : "0";
      let styl = `transform: translateX(${transVal}cpx)`;

      return styl;
    },
    bodyComputedStyl() {
      let styl = "";

      return styl;
    }
  }

  watch  = {
  }

  methods = {
    kindToggle: function(e) {
      let id = e.currentTarget.id;
      let list = this.activeTab === "component" ? this.comList : this.apiList;

      for (var i = 0, len = list.length; i < len; ++i) {
        if (list[i].cid == id) {
          list[i].open = !list[i].open;
        } else {
          list[i].open = false;
        }
      }
    },
    tabItemClick(e) {
      let tar = e.currentTarget;
      let dataset = tar.dataset;
      let index = parseInt(dataset.index);

      this.tabList[index].selected = true;
      this.tabList[(index + 1) % 2].selected = false;

      this.activeTab = index == 0 ? "component" : "api";
    },
    routeTo(e) {
      let tar = e.currentTarget;
      let dataset = tar.dataset;
      let url = dataset.routeurl;
      let path = dataset.routepath;
      cml.navigateTo({
        path: path
      });
    },
    // onPulldown(e){
    //   this.$setTimeout(() => {
    //     console.log(111)
    //     e.detail.stop()
    //   }, 3000);
    //   console.log(e.detail)
    // },
    // onPullup(e){
    //   this.$setTimeout(() => {
    //     console.log(222)
    //     e.detail.stop()
    //   }, 20000);
    //   console.log(e.detail)
    // }
  }

  beforeCreate() {
  }

  created() {

  }

  beforeMount() {
  }

  async mounted() {
    const info = await cml.getSystemInfo()
    this.winHeight = info.viewportHeight
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default page(Demo);
</script>
<style lang="scss">
@import './index.scss';
</style>
<script cml-type="json">
{
    "base": {
        "usingComponents": {
          "h-page": "/components/h-page/h-page",
          "h-page-scroll": "/components/h-page-scroll/h-page-scroll"
        },
        "navigationBarTitleText": "cml-ui组件库",
        "backgroundTextStyle": "dark",
        "backgroundColor": "#E2E2E2",
        "enablePullDownRefresh": true
    }
}
</script>
