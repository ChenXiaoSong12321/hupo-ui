<template>
<view c-if="{{show}}" class="h-popup {{ show ? 'van-popup-wrap--show' : '' }}" style="{{containerStyle}}">
  <view  class="{{maskClass}} {{ transitionIn ? 'van-popup--in' : 'van-popup--leave' }}" c-bind:tap="closeevent"></view>
  <!-- c-catch禁止事件冒泡 -->
  <view class="h-popup-content {{ transitionIn ? 'van-popup--in' : 'van-popup--leave' }}" style="{{contentStyle}}" c-catch:tap="contentTap">
    <slot></slot>
  </view>
</view>
</template>
<script>

class CPopup {
  props = {
    mask: {
      type: Boolean,
      default: true
    },
    show: {
      type: Boolean,
      default: false
    },
    center: {
      type: Boolean,
      default: true
    },
    position: {
      type: String,
      default: ''
    }
  }

  data = {
    transitionIn:false
  }

  computed = {
    maskClass() {
      return this.mask ? "has-mask" : "no-mask";
    },
    containerStyle() {
      let s = ''

      if (this.center) {
         s += 'align-items:center;justify-content:center;'
      }

      return s
    },
    contentStyle() {
      let style = "position: absolute;left:0;right:0;top:0;bottom:0;"
      switch (this.position) {
        case 'top':
          style = style.replace('bottom:0;', 'display:flex;flex-direction:column;');
          break;
        case 'right':
          style = style.replace('left:0;', 'display:flex;flex-direction:row;');
          break;
        case 'bottom':
          style = style.replace('top:0;', 'display:flex;flex-direction:column;');
          break;
        case 'left':
          style = style.replace('right:0;', 'display:flex;flex-direction:row;');
          break;
        default: 
          style="position:relative;";
          break;
      }
      return style;
    }
  }

  watch = {
    show(value){
      value ? this.show() : this.hide()
    },  
  }

  methods = {
    closeevent(){
      this.$cmlEmit("close");
    },
    show(){

    },
    hide(){

    },
    contentTap(){}
  }
}

export default new CPopup();
</script>

<style>
.h-popup {
  position: fixed;
  z-index: 10000;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
}
.has-mask {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(37, 38, 45, .4);
}
.no-mask {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
</style>
<script cml-type="json">
{
  "base": {
    "component": true
  }
}
</script>
