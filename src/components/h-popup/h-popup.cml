<template>
  <h-popup-manager show="{{ visible }}" bind:onclose="onclose">
    <view class="h-popup" c-catch:touchmove="empty">
      <view class="h-popup-close">
        <h-button type="none" bind:onclick="onclose">
          <h-icon name="el-icon-hp-shanchu" class="h-popup-close-icon"></h-icon>
        </h-button>
      </view>
      <view class="h-popup-box {{type?'h-popup-box'+type:''}}" style="{{customStyle}}">
        <view class="h-popup-box-bg">
          <slot name="bg"></slot>
        </view>
        <view class="h-popup-box-content {{type?'h-popup-box-content'+type:''}}">
          <slot></slot>
        </view>
      </view>
    </view>
  </h-popup-manager>
</template>
<script>
class HPopup {
  props = {
    show: {
      type: Boolean,
      default: false
    },
    type: {
      type: String,
      default: "ad"
    },
    top: String,
    customStyle: {
      type: String,
      default: ""
    }
  };
  data={
    visible:false
  }
  watch = {
    show(n) {
      console.log(n,'popup')
      this.visible = n;
    }
  };

  methods = {
    onclose() {
      this.visible = false;
      this.$cmlEmit("onclose", false);
    },
    empty(){}
  };
}

export default new HPopup();
</script>
<style scoped lang="scss">
@import './h-popup.scss';
</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "h-popup-manager": "../h-popup-manager/h-popup-manager",
      "h-icon": "../h-icon/h-icon",
      "h-button": "../h-button/h-button"
    },
    "component": true
    }
}
</script>
