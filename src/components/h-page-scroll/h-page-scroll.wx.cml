<template>
  <page title="{{selfTitle}}">
    <view class="h-page h-page--{{background}}">
      <h-navbar
        type="{{type}}"
        loading="{{loading}}"
        title="{{selfTitle}}"
        showHomeIcon="{{showHomeIcon}}"
        fixed
      ></h-navbar>
      <view class="h-page-container" style="min-height: {{scrollHeight}}px">
        <h-dialog ref="h-dialog" c-bind:confirm="dialogConfirm" c-bind:cancel="dialogCancel"></h-dialog>
        <h-toast ref="h-toast"></h-toast>
        <slot></slot>
        <view class="h-page-pullup">
          <h-load-more loading="{{status == 'pullup'}}"></h-load-more>
        </view>
      </view>
      <view class="h-page-bottom" c-if="{{viewport.isAllScreen}}">
        <view class="h-page-bottom-fixed"></view>
      </view>
    </view>
  </page>
</template>
<script>
import cml from "chameleon-api";
import HPageMixins from "../h-page/h-page.mixin";
import component from "../../core/mixins/component.js";

class HPageScroll {
  computed = {
    scrollHeight() {
      const subtract = cml.cpx2px(this.subtract);
      const viewportHeight = cml.cpx2px(this.viewport.viewportHeight);
      const bottomHeight = this.viewport.bottomHeight
      return Math.floor( viewportHeight - this.viewport.headerHeight - bottomHeight - subtract );
    }
  };

  methods = {
    pullup() {
      if (!!this.status) return;
      this.status = "pullup";
      this.$cmlEmit("pullup", this);
    },
    pulldown() {
      if (!!this.status) return;
      this.status = "pulldown";
      this.$cmlEmit("pulldown", this);
    },
    stop() {
      this.status = "";
      wx.stopPullDownRefresh();
    }
  };
}
export default component(HPageMixins, HPageScroll);
</script>
<style lang="scss">
@import "./h-page-scroll.wx.scss";
</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "h-navbar": "../h-navbar/h-navbar",
      "h-load-more": "../h-load-more/h-load-more",
      "h-toast": "../h-toast/h-toast",
      "h-dialog": "../h-dialog/h-dialog"
    },
    "component": true
  }
}
</script>
