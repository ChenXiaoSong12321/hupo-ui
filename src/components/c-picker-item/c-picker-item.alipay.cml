<template>
  <origin-picker-view indicator-style="height: 72rpx;" style="height: {{height}}rpx;" value="{{value}}" onChange="bindChange">
    <origin-picker-view-column>
      <view c-for="{{list}}" style="line-height: 72rpx; align-items:center">
        <text style="{{itemStyle}}">{{item}}</text>
      </view>
    </origin-picker-view-column>
  </origin-picker-view>
</template>
<script>
 class CPickerItem implements CPickerItemInterface {
    props = {
      list: {
        type: Array,
        default: ['']
      },
      defaultIndex: {
        type: Number,
        default: 0
      },
      height: {
        type: Number,
        default: 400
      },
      textAlign: {
        type: String,
        default: "center"
      },
      itemStyle:{
        type: String,
        default: ""
      }
    }
    data = {}
    computed ={
      value() {
        return [this.defaultIndex];
      }
    }
    watch = {}
    methods = {
      bindChange(e) {
        const val = e.detail.value;
        this.$cmlEmit("selectchange", {
          index: val[0]
        });
      }
    }
    beforeCreate(){}
    created() {}
    beforeMount() {}
    mounted() {}
    beforeDestroy() {}
    destroyed() {}
  }

  export default new CPickerItem();

</script>

<style scoped>
</style>

<script cml-type="json">
{
  "base": {
    "component": true
  }
}
</script>
