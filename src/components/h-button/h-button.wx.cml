<template>
  <origin-form bindsubmit="handleFormSubmit" report-submit class="h-button-form">
    <origin-button
      type="keng"
      form-type="{{openType ? '' : 'submit'}}"
      class="h-button {{ type == 'none' ? 'h-button--none' : 'h-button--'+size }} {{ type == 'none' ? 'h-button--none' : 'h-button--'+type }} {{stateClass}} {{radius?'is-radius':''}} {{customClass}}"
      disabled="{{disabled}}"
      open-type="{{openType}}"
      style="{{customStyle||''}}"
      bindtap="handleTap"
      bindcontact="contact"
      bindgetuserinfo="getuserinfo"
      bindgetphonenumber="getphonenumber"
      binderror="error"
      bindopensetting="opensetting"
    >
      <slot></slot>
    </origin-button>
  </origin-form>
</template>

<script>
import HButtonMixins from './h-button.mixins.js'
import componentMixin from '../../core/mixins/component/index.js'
import cml from 'chameleon-api'
import { global } from '@hupo/core'

class HButton implements HButtonInterface {
  name = 'h-button'
  mixins = [HButtonMixins]
  methods = {
    getuserinfo(e) {
      console.log(e, 'getuserinfo')
      this.btnEmit('getuserinfo', e.detail)
    },
    contact(e) {
      this.btnEmit('contact', e.detail)
    },
    getphonenumber(e) {
      this.btnEmit('getphonenumber', e.detail)
    },
    error(e) {
      this.btnEmit('error', e.detail)
    },
    opensetting(e) {
      this.btnEmit('opensetting', e.detail)
    },
    handleTap(e) {
      const { disabled, openType } = this
      if (disabled || openType) return
      this.btnEmit('onclick', e.detail)
    },
    async handleFormSubmit(event) {
      const res = await cml.getSystemInfo()
      // todo: jerry == -> !=
      if (res.env === 'wx' && res.extraParams.platform != 'devtools') {
        const formId = event.detail.formId || ''
        console.log('formId:', formId)
        global.buttonFormIds = global.buttonFormIds || []
        global.buttonFormIds.push(formId)
      }
    }
  };
}
export default new HButton()

</script>

<style lang="scss">
@import "./h-button.scss";
</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {},
    "component": true
  }
}
</script>
