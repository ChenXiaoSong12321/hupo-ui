<template>
  <view class="h-search {{cancel?'is-cancel':''}}">
    <view class="h-search-wrap">
      <view c-if="{{!cancel}}" class="h-search-slot" >
        <slot></slot>
      </view>
      <h-button type="none" c-bind:onclick="onclick" class="h-search-detail-wrap {{cancel?'is-cancel':''}}">
        <view class="h-search-detail {{cancel?'is-cancel':''}}">
          <h-icon name="el-icon-hp-search" class="h-search-icon"></h-icon>
          <input class="h-search-input" placeholder="{{placeholder}}" value="{{value}}" cStyle="{{inputStyle}}" c-bind:input="inputChanged"></input>
        </view>
      </h-button>
      <h-button type="none" c-bind:onclick="oncancel" c-if="{{cancel}}" class="h-search-cancel-wrap">
        <view class="h-search-cancel">取消</view>
      </h-button>
    </view>
  </view>
</template>

<script>
import component from "../../core/mixins/component.js";
class HSearch {

  props = {
    value:{
      type:String,
      default:''
    },
    cancel:{
      type:Boolean,
      default:false
    },
    placeholder:{
      type:String,
      default:'请输入搜索关键字'
    }
  }

  computed = {
   inputStyle(){
     return `
      border: none;
      height: 56cpx;
      line-height: 56cpx;
      font-size:26cpx;
      color:#666;
      padding:0;
      width:${this.cancel?'528cpx':'446cpx'};
      border-radius: 0 56cpx 56cpx 0;
     `
   }
  }

  watch  = {
    value(n,o){
      if(n!==o)this.$cmlEmit('onChanged',{value:n})
    }
  }

  methods = {
    onclick(){
      this.$cmlEmit('onclick',{value:this.value})
    },
    oncancel(){
      this.$cmlEmit('oncancel',{value:this.value})
    },
    inputChanged(e){
      this.$cmlEmit('input',e.detail)
    }
  }
}

export default component(HSearch);
</script>
<style lang="scss">
@import './h-search.scss';
</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "h-icon": "../h-icon/h-icon",
      "h-button": "../h-button/h-button"
    }
  }
}
</script>
