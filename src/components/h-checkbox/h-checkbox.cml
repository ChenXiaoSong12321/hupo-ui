<template>
  <view class="h-checkbox">
    <view class="h-checkbox-wrap" c-bind:tap="changeCheck">
      <view class="h-checkbox-check" style="{{ checkStyle }}">
        <view class="{{ checkClass }}">
          <h-icon
            c-if="{{innerChecked}}"
            name="el-icon-hp-xuanzekuangxuanzhong"
            customStyle="color:{{primaryColor}};font-size:32cpx;"
          ></h-icon>
        </view>
      </view>
      <text class="h-checkbox-label">{{ label }}</text>
    </view>
  </view>
</template>
<script>
import { primaryColor } from "../../assets/config/style.var.js";
import componentMixin from '../../core/mixins/component/index.js'

class HCheckbox {
  name = 'h-checkbox'
  mixins = [...componentMixin]
  props = {
    checked: {
      type: Boolean,
      default: false
    },
    label: {
      type: String
    },
    disabled: {
      type: Boolean,
      default: false
    },
    position: {
      type: String,
      default: 'left'
    },
    groupIndex: {
      type: Number,
      default: -1
    }
  }
  data = {
    innerChecked:false,
    primaryColor
  }
  computed = {
    checkStyle () {
      let style = '';
      if (this.disabled) {
        style += 'opacity:0.5;'
      }
      if (this.position == 'right') {
        style += 'position:absolute;right:0;margin-right:45cpx;'
      } else {
        style += 'margin-right:13cpx;'
      }
      return style;
    },
    checkClass () {
      let clazz = this.innerChecked? 'h-checkbox-checked': 'h-checkbox-uncheck';
      clazz += ' h-checkbox-disabled'
      return clazz
    },
  }
  watch = {
    checked(newChecked) {
      this.innerChecked = newChecked;
    }
  }
  methods = {
    changeCheck () {
      if (this.disabled) return;
      this.innerChecked = !this.innerChecked
      let value = {
        value: this.innerChecked
      }
      if (this.groupIndex !== -1) {
        value.index = this.groupIndex
      }
      this.$cmlEmit('changeevent', value);
      this.$cmlEmit('change', value);
    }
  }
  created () {
     let { checked } = this
    this.innerChecked = checked
  }
}
export default new HCheckbox()
</script>
<style lang="scss">
@import "./h-checkbox.scss";
</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "h-icon": "../h-icon/h-icon"
    },
    "component": true
  }
}
</script>
