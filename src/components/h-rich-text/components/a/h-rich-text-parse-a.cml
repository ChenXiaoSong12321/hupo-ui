<template>
  <view
    c-bind:tap="goto(nodes.attr.href)"
    class="wxParse-inline {{nodes.classStr}} wxParse-{{nodes.tag}}"
    data-src="{{nodes.attr.href}}"
    style="{{nodes.styleStr || ''}}"
  >
    <h-rich-text-parse-base c-for="{{nodes.nodes}}" nodes="{{item}}"></h-rich-text-parse-base>
  </view>
</template>
<script>
import recursion from '../../recursion.interface'
import componentMixin from '../../../../core/mixins/component/index.js'
import { url } from '@hupo/core'
class HRichTextParseA implements HRichTextParseA {
  name = 'h-rich-text-parse-a'
  mixins = componentMixin
  beforeCreate() {
    recursion.beforeCreate(this)
  }
  props = {
    nodes: {
      type: Object,
      default: {}
    }
  }
  methods = {
    goto(href) {
      if (!/^\//.test(href))href = `/${href}`
      const path = href.split('?')[0]
      const query = url.formatUrlParam(href.split('?')[1])
      this._handleGoto(path, query)
    }
  }
}
export default new HRichTextParseA()
</script>

<style lang="scss">
@import "../common.scss";
</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "h-rich-text-parse-base": "../base/h-rich-text-parse-base"
    },
    "component": true
  }
}
</script>
