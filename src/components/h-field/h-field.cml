<template>
  <view class="h-field-wrap">
    <view class="h-field">
      <h-icon name="{{icon}}" c-if="{{icon}}" class="h-field-icon"></h-icon>
      <view class="h-field-label {{icon?'is-has-icon':''}}" c-if="{{label}}">{{label}}</view>
      <view class="h-field-input-wrap {{label?'':'is-no-label'}}">
        <input
          class="h-field-input"
          placeholder="{{placeholder}}"
          value="{{value}}"
          cStyle="{{inputStyle}}"
          c-bind:input="inputChanged"
          type="{{type}}"
          disabled="{{disabled}}"
          focus="{{focus}}"
          maxlength="{{maxlength}}"
          returnKeyType="{{returnKeyType}}"
          placerHolderColor="{{placerHolderColor}}"
          maxValue="{{maxValue}}"
          minValue="{{minValue}}"
        />
      </view>
      <view c-if="{{useSlot}}" class="h-field-slot">
        <slot class="h-field-slot"></slot>
      </view>
    </view>
    <view class="h-field-bottom-line-wrap" c-if="{{!border}}">
      <view class="h-field-bottom-line"></view>
    </view>
  </view>
</template>

<script>
import HInput from './h-input.mixins.js'
import componentMixin from '../../core/mixins/component/index.js'

class HField implements HFieldInterface {
  name = 'h-field'
  mixins = [HInput, ...componentMixin]
  props = {
    icon:{
      type: String,
      default:''
    },
    label:{
      type: String,
      default:''
    },
    value:{
      type: String,
      default:''
    },
    useSlot:{
      type: Boolean,
      default:false
    },
    placeholder: {
      type: String,
      default:''
    },
    border:{
      type: Boolean,
      default:false
    }
  }
  computed = {
   inputStyle(){
     return `
      border: none;
      height: 80cpx;
      line-height: 80cpx;
      margin-top: 1px;
     `
   }
  }
  methods = {
    inputChanged(e){
      this.$cmlEmit('input',e.detail)
    }
  }
}
export default new HField()
</script>
<style lang="scss">
@import "./h-field.scss";
</style>
<script cml-type="json">
{
  "base": {
    "component": true,
    "usingComponents":{
      "h-icon": "../h-icon/h-icon"
    }
  }
}
</script>
